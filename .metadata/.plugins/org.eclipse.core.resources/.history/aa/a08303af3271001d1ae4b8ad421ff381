package com.cab.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cab.DTO.AdminDTO;
import com.cab.DTO.LoginDTO;
import com.cab.model.Admin;
import com.cab.model.AdminSession;
import com.cab.model.CompletedTrips;
import com.cab.services.AdminService;
import com.cab.services.LoginService;

@RestController
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	private AdminService adminService;
	
	@Autowired
	private LoginService loginService;
	
	
	
	@PostMapping("/register")
	public Admin registerAdminHandler(@RequestBody Admin admin) {
		
		return adminService.adminRegister(admin);
		
	}
	
	
	
	
	@PostMapping("/login")
	public ResponseEntity<AdminSession> loginAdminHandler(@RequestBody LoginDTO dto){
		
		AdminSession admin = loginService.loginAdmin(dto);
		
		return new ResponseEntity<AdminSession>(admin, HttpStatus.ACCEPTED);
		
	}
	
	
	
	
	@PatchMapping("/update/{username}")
	public Admin adminPasswordUpdateHandler(@RequestBody AdminDTO dto,@PathVariable("username") String username,
			@RequestParam String key) {
		
		return adminService.updatePassword(dto, username, key);
		
	}
	
	
	
	
	@PutMapping("/update/{username}")
	public Admin updateAdminHandler(@RequestBody Admin admin,@PathVariable("username") String username,
			@RequestParam String key) {
	
		return adminService.update(admin, username, key);
		
	}
	
	
	
	@DeleteMapping("/delete")
	public String deleteAdminHandler(@RequestBody AdminDTO dto,@RequestParam String key) {
		
		return adminService.deleteByUsername(dto, key);
		
	}
	
	
	
	@GetMapping("/logout")
	public String logoutAdminHandler(@RequestParam String key) {
		
		return adminService.logoutAdmin(key);
		
	}
	
	
	
	@GetMapping("/listoftripsbycustomer")
	public List<CompletedTrips> listOfAllTripsByCustomerIdHandler(@RequestParam Integer customerId,
			@RequestParam String key){
	
	return adminService.getTripsByCustomerId(customerId, key);	
		
	}
	
	
	
	
	
}
